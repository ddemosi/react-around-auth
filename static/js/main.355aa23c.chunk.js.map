{"version":3,"sources":["images/logo.svg","images/edit-pencil.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","utils/Api.js","utils/utils.js","utils/Auth.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ConfirmDeletePopup.js","components/Register.js","components/Login.js","components/Auth.js","components/ProtectedRoute.js","components/InfoTooltip.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","removeJWT","localStorage","removeItem","setEmail","window","location","reload","handleHamburgerClick","toggleHamburgerState","hamburger","className","src","logo","alt","link","to","name","email","onClick","CurrentUserContext","React","createContext","Card","currentUser","useContext","isOwn","cardOwnerId","_id","isLiked","cardLikes","some","i","handleDeleteClick","cardId","handleCardClick","cardLink","cardName","style","backgroundImage","onCardLike","length","Main","avatar","editPencil","handleEditAvatarClick","handleEditProfileClick","about","handleAddCardClick","cards","map","card","key","id","ownerId","likes","handleCardLike","Footer","ImagePopup","isOpen","onClose","api","endpoint","this","_apiEndpoint","url","_auth","headers","res","ok","json","Promise","reject","status","fetch","then","_checkResponse","data","method","body","JSON","stringify","cardID","likeStatus","authorization","authApi","_headers","password","jwt","PopupWithForm","onSubmit","type","title","children","EditProfilePopup","nameRef","createRef","aboutRef","e","preventDefault","current","value","description","onUpdateUser","ref","placeholder","defaultValue","minLength","maxLength","required","isSaving","EditAvatarPopup","linkRef","onUpdateAvatar","AddPlacePopup","titleRef","onAddPlace","ConfirmDeletePopup","onCardDelete","confirmDeleteId","Register","emailRef","passwordRef","signUp","Error","setRegistrationSuccess","toggleInfoTooltip","toggleLoggedIn","catch","err","console","log","Login","signIn","setItem","token","Auth","buttonDescription","linkName","ProtectedRoute","Component","component","isLoggedIn","InfoTooltip","useState","message","setMessage","useEffect","registrationSuccess","App","setCurrentInfo","editAvatarIsOpen","toggleEditAvatar","editProfileIsOpen","toggleEditProfile","addCardIsOpen","toggleAddCard","confirmDeleteIsOpen","toggleConfirmDelete","infoTooltipIsOpen","setConfirmDeleteId","selectedCard","setSelectedCard","toggleSaveText","setCards","changeProfileInfo","setCurrentUserInfo","getUserInfo","closeAllPopups","target","currentTarget","getItem","checkToken","currentInfo","info","getCardList","owner","myId","Provider","exact","path","changeLikeCardStatus","newCard","newCards","c","updateAvatar","addCard","deleteCard","filteredCards","filter","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"qIAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,yC,sKC0C5BC,MAtCf,SAAgBC,GAEZ,SAASC,IACLC,aAAaC,WAAW,SACxBH,EAAMI,SAAS,IACfC,OAAOC,SAASC,SAIpB,SAASC,IACLR,EAAMS,sBAAsBT,EAAMU,WAmBtC,OACI,4BAAQC,UAAS,uBAAkBX,EAAMU,UAAY,0BAA4B,KAC7E,yBAAKC,UAAU,OAAOC,IAAKC,IAAMC,IAAI,uBAjBrCd,EAAMe,KACC,kBAAC,IAAD,CAAMJ,UAAU,eAAeK,GAAIhB,EAAMe,MAAOf,EAAMiB,MACtDjB,EAAMkB,MAET,oCACI,uBAAGP,UAAS,wBAAmBX,EAAMU,UAAY,iCAAmC,KAAOV,EAAMkB,OACjG,4BAAQC,QAASlB,EAAWU,UAAS,yBAAoBX,EAAMU,UAAY,kCAAoC,KAA/G,WACA,4BAAQS,QAASX,EAAsBG,UAAS,4BAAuBX,EAAMU,UAAY,2BAA6B,OAIvH,O,iBC3BNU,EAAqBC,IAAMC,gBC4CzBC,MA3Cf,SAAcvB,GAGV,IAAMwB,EAAcC,qBAAWL,GAEzBM,EAAQ1B,EAAM2B,cAAgBH,EAAYI,IAK1CC,EAAU7B,EAAM8B,UAAUC,MAAK,SAAAC,GAAC,OAAIA,EAAEJ,MAAQJ,EAAYI,OAgBhE,OAEI,wBAAIjB,UAAU,WACV,4BAAQA,UAAS,0BAAqBe,EAAQ,0BAA2B,IAAMP,QAPvF,WACInB,EAAMiC,kBAAkBjC,EAAMkC,WAO1B,yBAAKvB,UAAU,iBAAiBQ,QAlBxC,WACInB,EAAMmC,gBAAgBnC,EAAMoC,SAAUpC,EAAMqC,WAiBkBC,MAAO,CAAEC,gBAAgB,OAAD,OAASvC,EAAMoC,SAAf,QAElF,yBAAKzB,UAAU,4BACX,wBAAIA,UAAU,kBAAkBX,EAAMqC,UACtC,yBAAK1B,UAAU,2BACX,4BAAQA,UAAS,+BAA0BkB,EA3B9B,8BA2BkE,IAAMV,QAlBrG,WACInB,EAAMwC,WAAWxC,EAAM8B,UAAW9B,EAAMkC,WAkB5B,uBAAGvB,UAAU,yBAAyBX,EAAM8B,UAAUW,YCK3DC,MAtCf,SAAc1C,GAEV,IAAMwB,EAAcC,qBAAWL,GAE/B,OACI,0BAAMT,UAAU,QACZ,6BAASA,UAAU,iBACf,yBAAKA,UAAU,6BACX,yBAAKA,UAAU,kBAAkBC,IAAKY,EAAYmB,OAAQ7B,IAAI,iBAC9D,yBAAKH,UAAU,oBACX,yBAAKA,UAAU,yBAAyBC,IAAKgC,IAAY9B,IAAI,SAASK,QAASnB,EAAM6C,0BAI7F,yBAAKlC,UAAU,2BACX,wBAAIA,UAAU,iBAAiBa,EAAYP,MAC3C,4BAAQN,UAAU,uBAAuBQ,QAASnB,EAAM8C,yBACxD,uBAAGnC,UAAU,qBAAqBa,EAAYuB,QAGlD,4BAAQpC,UAAU,wCAAwCQ,QAASnB,EAAMgD,sBAG7E,6BAASrC,UAAU,kBACf,wBAAIA,UAAU,4BAENX,EAAMiD,MAAMC,KAAI,SAACC,GACb,OAAO,kBAAC,EAAD,CAAMC,IAAKD,EAAKE,GAAIhB,SAAUc,EAAKlC,KAAMiB,OAAQiB,EAAKE,GAAI1B,YAAawB,EAAKG,QAASlB,SAAUe,EAAKpC,KAAMe,UAAWqB,EAAKI,MACjIf,WAAYxC,EAAMwD,eAAgBvB,kBAAmBjC,EAAMiC,kBAAmBE,gBAAiBnC,EAAMmC,yBCvBlHsB,MARf,WACI,OACI,4BAAQ9C,UAAU,gBACd,uBAAGA,UAAU,qBAAb,4BCSG+C,MAbf,SAAoB1D,GAChB,OAEI,6BAASW,UAAS,sBAAiBX,EAAM2D,OAAS,sBAAwB,KAClE,yBAAKhD,UAAU,2BACX,4BAAQA,UAAU,gCAAgCQ,QAASnB,EAAM4D,UACjE,yBAAKjD,UAAU,qBAAqBC,IAAKZ,EAAMe,KAAMD,IAAKd,EAAMiB,OAC/D,uBAAGN,UAAU,yBAAyBX,EAAMiB,S,gBC+E3D4C,EAAM,I,WArFV,WAAYC,GAAW,oBACrBC,KAAKC,aAAeF,EAASG,IAC7BF,KAAKG,MAAQJ,EAASK,Q,2DAGTC,GACb,OAAQA,EAAIC,GAAKD,EAAIE,OAASC,QAAQC,OAAR,iBAAyBJ,EAAIK,W,oCAE9C,IAAD,OACV,OAAOC,MAAM,GAAD,OAAIX,KAAKC,aAAT,aAAkC,CAC9CG,QAASJ,KAAKG,QAEbS,MAAM,SAACP,GACN,OAAO,EAAKQ,eAAeR,Q,oCAGlB,IAAD,OACZ,OAAOM,MAAM,GAAD,OAAIX,KAAKC,aAAT,UAA+B,CACzCG,QAASJ,KAAKG,QAEfS,MAAO,SAAAP,GAAG,OAAI,EAAKQ,eAAeR,Q,wCAGnBS,GAAO,IAAD,OACtB,OAAOH,MAAM,GAAD,OAAIX,KAAKC,aAAT,aAAkC,CAC5Cc,OAAQ,QACRX,QAASJ,KAAKG,MACda,KAAMC,KAAKC,UAAU,CACnBhE,KAAM4D,EAAK5D,KACX8B,MAAO8B,EAAK9B,UAGf4B,MAAO,SAAAP,GAAG,OAAI,EAAKQ,eAAeR,Q,8BAG7BS,GAAO,IAAD,OACZ,OAAOH,MAAM,GAAD,OAAIX,KAAKC,aAAT,UAA+B,CACzCc,OAAQ,OACRX,QAASJ,KAAKG,MACda,KAAMC,KAAKC,UAAU,CACnBhE,KAAM4D,EAAK5D,KACXF,KAAM8D,EAAK9D,SAGd4D,MAAO,SAAAP,GAAG,OAAI,EAAKQ,eAAeR,Q,iCAG1Bc,GAAS,IAAD,OACjB,OAAOR,MAAM,GAAD,OAAIX,KAAKC,aAAT,kBAA+BkB,GAAU,CACnDJ,OAAQ,SACRX,QAASJ,KAAKG,QAEfS,MAAO,SAAAP,GAAG,OAAI,EAAKQ,eAAeR,Q,2CAGhBc,EAAQC,GAAa,IAAD,OACvC,OAAkB,IAAfA,EACMT,MAAM,GAAD,OAAIX,KAAKC,aAAT,wBAAqCkB,GAAU,CACzDJ,OAAQ,MACRX,QAASJ,KAAKG,QAEfS,MAAO,SAAAP,GAAG,OAAI,EAAKQ,eAAeR,MAE5BM,MAAM,GAAD,OAAIX,KAAKC,aAAT,wBAAqCkB,GAAU,CACzDJ,OAAQ,SACRX,QAASJ,KAAKG,QAEfS,MAAO,SAAAP,GAAG,OAAI,EAAKQ,eAAeR,Q,mCAI1BH,GAAM,IAAD,OAChB,OAAOS,MAAM,GAAD,OAAIX,KAAKC,aAAT,oBAAyC,CACnDc,OAAQ,QACRX,QAASJ,KAAKG,MACda,KAAMC,KAAKC,UAAU,CACnBtC,OAAQsB,MAGXU,MAAO,SAAAP,GAAG,OAAI,EAAKQ,eAAeR,U,KAM3B,CC9Dc,CACtBH,IAAK,6CACLE,QAAS,CACPiB,cAAe,uCAChB,eAAgB,sBCwBfC,EAAU,I,WAnDZ,WAAYvB,GAAW,oBACnBC,KAAKC,aAAeF,EAASG,IAC7BF,KAAKuB,SAAWxB,EAASK,Q,2DAGbC,GACZ,OAAQA,EAAIC,GAAKD,EAAIE,OAASC,QAAQC,OAAR,iBAAyBJ,EAAIK,W,oCAE/C,IAAD,OACX,OAAOC,MAAM,GAAD,OAAIX,KAAKC,aAAT,aAAkC,CAC1CG,QAASJ,KAAKuB,WAEbX,MAAK,SAACP,GACH,OAAO,EAAKQ,eAAeR,Q,6BAIhClD,EAAOqE,GAAW,IAAD,OACpB,OAAOb,MAAM,GAAD,OAAIX,KAAKC,aAAT,WAAgC,CACxCc,OAAQ,OACRX,QAASJ,KAAKuB,SACdP,KAAMC,KAAKC,UAAU,CAAC/D,QAAOqE,eAEhCZ,MAAK,SAACP,GACH,OAAO,EAAKQ,eAAeR,Q,6BAI5BlD,EAAOqE,GAAW,IAAD,OACpB,OAAOb,MAAM,GAAD,OAAIX,KAAKC,aAAT,WAAgC,CACxCc,OAAQ,OACRX,QAASJ,KAAKuB,SACdP,KAAMC,KAAKC,UAAU,CAAC/D,QAAOqE,eAE5BZ,MAAK,SAACP,GACH,OAAO,EAAKQ,eAAeR,Q,iCAI5BoB,GACP,OAAOd,MAAM,GAAD,OAAIX,KAAKC,aAAT,aAAkC,CAC1Cc,OAAQ,MACRX,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BqB,U,KAO3B,CDpBa,CAC3BvB,IAAI,oCACJE,QAAQ,CACN,eAAgB,sBEtBLsB,MAbf,SAAuBzF,GAInB,OACQ,0BAAMiB,KAAMjB,EAAMiB,KAAMyE,SAAU1F,EAAM0F,SAAU/E,UAAS,oBAAeX,EAAMiB,KAArB,YAA6BjB,EAAM2D,OAAS,eAAiB,KAChH,4BAAQhD,UAAS,4CAAuCX,EAAMiB,MAAQE,QAASnB,EAAM4D,QAAS+B,KAAK,UACnG,uBAAGhF,UAAU,0BAA0BX,EAAM4F,OAC5C5F,EAAM6F,WC0BZC,MAhCf,SAA0B9F,GAGtB,IAAMwB,EAAcC,qBAAWL,GAGzB2E,EAAU1E,IAAM2E,YAChBC,EAAW5E,IAAM2E,YAUvB,OACI,kBAAC,EAAD,CAAeN,SATnB,SAAsBQ,GAClBA,EAAEC,iBACF,IAAMlF,EAAO8E,EAAQK,QAAQC,MACvBC,EAAcL,EAASG,QAAQC,MAErCrG,EAAMuG,aAAatF,EAAMqF,IAIcrF,KAAM,eAAgB2E,MAAO,eAAgBjC,OAAQ3D,EAAM2D,OAAQC,QAAS5D,EAAM4D,SACzH,yBAAKjD,UAAU,uCACP,2BAAO6F,IAAKT,EAAS1C,GAAG,eAAe1C,UAAU,gDAAgD8F,YAAY,OAAOd,KAAK,OAAOe,aAAclF,EAAYP,KAAM0F,UAAU,IAAIC,UAAU,KAAKC,UAAQ,IACrM,0BAAMxD,GAAG,qBAAqB1C,UAAU,iBAE5C,yBAAKA,UAAU,uCACX,2BAAO6F,IAAKP,EAAU5C,GAAG,gBAAgB1C,UAAU,iDAAiD8F,YAAY,WAAWd,KAAK,OAAOe,aAAclF,EAAYuB,MAAO4D,UAAU,IAAIC,UAAU,MAAMC,UAAQ,IAC9M,0BAAMxD,GAAG,sBAAsB1C,UAAU,iBAE7C,4BAAQgF,KAAK,SAAShF,UAAU,0DAA0DX,EAAM8G,SAAW,YAAc,UCCtHC,MA5Bf,SAAyB/G,GAGrB,IAAMwB,EAAcC,qBAAWL,GAEzB4F,EAAU3F,IAAM2E,YAWtB,OACI,kBAAC,EAAD,CAAe/E,KAAM,gBAAiB2E,MAAO,cAAeF,SAVhE,SAAkBQ,GACdA,EAAEC,iBACF,IAAMpF,EAAOiG,EAAQZ,QAAQC,MAE7BrG,EAAMiH,eAAelG,IAM2D4C,OAAQ3D,EAAM2D,OAAQC,QAAS5D,EAAM4D,SACjH,yBAAKjD,UAAU,uCACX,2BAAO6F,IAAKQ,EAAS3D,GAAG,cAAc1C,UAAU,uDAAuD8F,YAAY,YAAYd,KAAK,MACpIe,aAAclF,EAAYmB,OAAQgE,UAAU,MAC5C,0BAAMtD,GAAG,oBAAoB1C,UAAU,iBAE3C,4BAAQgF,KAAK,SAAShF,UAAU,8DAA8DX,EAAM8G,SAAW,YAAc,UCI1HI,MA5Bf,SAAuBlH,GAEnB,IAAMmH,EAAW9F,IAAM2E,YACjBgB,EAAU3F,IAAM2E,YAStB,OACI,kBAAC,EAAD,CAAe/E,KAAM,OAAQ2E,MAAO,YAAajC,OAAQ3D,EAAM2D,OAAQC,QAAS5D,EAAM4D,QAAS8B,SARnG,SAAkBQ,GACdA,EAAEC,iBACF,IAAMlF,EAAOkG,EAASf,QAAQC,MACxBtF,EAAOiG,EAAQZ,QAAQC,MAC7BrG,EAAMoH,WAAWnG,EAAMF,KAKnB,yBAAKJ,UAAU,uCACX,2BAAO6F,IAAKW,EAAU9D,GAAG,cAAc1C,UAAU,uDAAuD8F,YAAY,QAAQd,KAAK,OAAOe,aAAa,GAAGC,UAAU,IAAIC,UAAU,OAChL,0BAAMvD,GAAG,oBAAoB1C,UAAU,iBAE3C,yBAAKA,UAAU,uCACX,2BAAO6F,IAAKQ,EAAS3D,GAAG,aAAa1C,UAAU,sDAAsD8F,YAAY,YAAYd,KAAK,MAC9He,aAAa,GAAGC,UAAU,MAC9B,0BAAMtD,GAAG,mBAAmB1C,UAAU,iBAE1C,4BAAQgF,KAAK,SAAShF,UAAU,uDAAuDX,EAAM8G,SAAW,YAAc,YCLnHO,MAlBf,SAA4BrH,GAWxB,OACI,kBAAC,EAAD,CAAeiB,KAAM,UAAW2E,MAAO,gBAAiBF,SAV5D,SAAkBQ,GACdA,EAAEC,iBAGFnG,EAAMsH,aAAatH,EAAMuH,kBAMmD5D,OAAQ3D,EAAM2D,OAAQC,QAAS5D,EAAM4D,SAC7G,4BAAQ+B,KAAK,SAAShF,UAAU,8DAA8DX,EAAM8G,SAAW,YAAc,SCwB1HU,EArCE,SAACxH,GAEd,IAAMyH,EAAWpG,IAAM2E,YACjB0B,EAAcrG,IAAM2E,YAyB1B,OACI,8BACI,2BAAOQ,IAAKiB,EAAU9G,UAAU,cAAcgF,KAAK,OAAOc,YAAY,UACtE,2BAAOD,IAAKkB,EAAa/G,UAAU,cAAcgF,KAAK,OAAOc,YAAY,aACzE,4BAAQtF,QA3BhB,SAA8B+E,GAC1BA,EAAEC,iBACFd,EAAQsC,OAAOF,EAASrB,QAAQC,MAAOqB,EAAYtB,QAAQC,OACtD1B,MAAK,SAACP,GACH,OAAmB,MAAfA,EAAIK,OACGF,QAAQC,OAAO,IAAIoD,MAAM,0DAEhC5H,EAAM6H,wBAAuB,GAC7B7H,EAAM8H,mBAAkB,GACxB9H,EAAM+H,gBAAe,GACd3D,EAAIS,SAGlBF,MAAK,SAACE,GACH7E,EAAMI,SAASyE,EAAK3D,UAEvB8G,OAAM,SAACC,GACJC,QAAQC,IAAIF,GACZjI,EAAM6H,wBAAuB,GAC7B7H,EAAM8H,mBAAkB,OAQWnC,KAAK,SAAShF,UAAU,gBAAgBX,EAAMiB,QCMlFmH,EAtCD,SAACpI,GAEX,IAAMyH,EAAWpG,IAAM2E,YACjB0B,EAAcrG,IAAM2E,YA0B1B,OACI,oCACI,2BAAOQ,IAAKiB,EAAU9G,UAAU,cAAcgF,KAAK,OAAOc,YAAY,UACtE,2BAAOD,IAAKkB,EAAa/G,UAAU,cAAcgF,KAAK,OAAOc,YAAY,aACzE,4BAAQtF,QA5BhB,SAA4B+E,GACxBA,EAAEC,iBACF,IAAMjF,EAAQuG,EAASrB,QAAQC,MAC/BhB,EAAQgD,OAAOZ,EAASrB,QAAQC,MAAOqB,EAAYtB,QAAQC,OACtD1B,MAAK,SAACP,GACH,OAAmB,MAAfA,EAAIK,OACGF,QAAQC,OAAO,IAAIoD,MAAM,8CACV,MAAfxD,EAAIK,OACJF,QAAQC,OAAO,IAAIoD,MAAM,2CAEhC5H,EAAM+H,gBAAe,GACd3D,MAGdO,MAAK,SAACE,GACH7E,EAAMI,SAASc,GACfhB,aAAaoI,QAAQ,QAASpH,GAC9BhB,aAAaoI,QAAQ,QAASzD,EAAK0D,UAEtCP,OAAM,SAACC,GACJC,QAAQC,IAAIF,OAQoBtH,UAAU,eAAegF,KAAK,UAAU3F,EAAMiB,QCI/EuH,EAlCF,SAACxI,GAyBV,OACE,yBAAKW,UAAU,cACb,wBAAIA,UAAU,eAAeX,EAAMiB,MAxBpB,YAAfjB,EAAMiB,KACD,kBAAC,EAAD,CACLA,KAAMjB,EAAMiB,KACZ4G,uBAAwB7H,EAAM6H,uBAC9BC,kBAAmB9H,EAAM8H,kBACzBC,eAAgB/H,EAAM+H,eACtB7G,MAAOlB,EAAMkB,MACbd,SAAUJ,EAAMI,WACM,WAAfJ,EAAMiB,KACR,kBAAC,EAAD,CACLA,KAAMjB,EAAMiB,KACZ4G,uBAAwB7H,EAAM6H,uBAC9BC,kBAAmB9H,EAAM8H,kBACzBC,eAAgB/H,EAAM+H,eACtB7G,MAAOlB,EAAMkB,MACbd,SAAUJ,EAAMI,YAElB8H,QAAQC,IAAI,2BACL,MAQL,uBAAGxH,UAAU,4BAA4BX,EAAMyI,kBAA/C,IAAkE,kBAAC,IAAD,CAAM9H,UAAU,aAAaK,GAAIhB,EAAMe,MAAOf,EAAM0I,SAApD,a,QCtB3DC,EAVQ,SAAC,GAAwC,IAA3BC,EAA0B,EAArCC,UAAyB7I,EAAY,6BAC3D,OACI,kBAAC,IAAD,MAEQ,kBAAMA,EAAM8I,WAAa,kBAACF,EAAc5I,GAAY,kBAAC,IAAD,CAAUgB,GAAG,eCyBlE+H,EA9BK,SAAC/I,GAAW,IAAD,EACGgJ,mBAAS,IADZ,mBACpBC,EADoB,KACXC,EADW,KAmB3B,OAhBAC,qBAAU,YAE4B,IAA9BnJ,EAAMoJ,oBACNF,EAAW,2CAG0B,IAA9BlJ,EAAMoJ,qBACbF,EAAW,mDAOhB,CAAClJ,EAAMoJ,sBAGN,6BAASzI,UAAS,4BAAuBX,EAAM2D,OAAS,uBAAyB,KAC7E,yBAAKhD,UAAU,eACX,4BAAQA,UAAU,gCAAgCQ,QAASnB,EAAM4D,UACjE,yBAAKjD,UAAS,8BAAyBX,EAAMoJ,oBAAsB,8BAAgC,8BACnG,uBAAGzI,UAAU,yBAAyBsI,MCuSvCI,MA9Sf,WAAiB,IAAD,EAC0BL,mBAAS,IADnC,mBACLxH,EADK,KACQ8H,EADR,OAGiCN,oBAAS,GAH1C,mBAGLO,EAHK,KAGaC,EAHb,OAImCR,oBAAS,GAJ5C,mBAILS,EAJK,KAIcC,EAJd,OAK2BV,oBAAS,GALpC,mBAKLW,EALK,KAKUC,EALV,OAMuCZ,oBAAS,GANhD,mBAMLa,EANK,KAMgBC,EANhB,OAOmCd,oBAAS,GAP5C,mBAOLe,EAPK,KAOcjC,EAPd,OASkCkB,mBAAS,IAT3C,mBASLzB,EATK,KASYyC,EATZ,OAU4BhB,mBAAS,CAC7CjI,KAAM,GACNE,KAAM,GACN0C,QAAQ,IAbA,mBAULsG,EAVK,KAUSC,EAVT,OAeuBlB,oBAAS,GAfhC,mBAeLlC,GAfK,KAeKqD,GAfL,QAgBcnB,mBAAS,IAhBvB,qBAgBL/F,GAhBK,MAgBEmH,GAhBF,SAmByBpB,oBAAS,GAnBlC,qBAmBLF,GAnBK,MAmBOf,GAnBP,SAoB0CiB,mBAAS,IApBnD,qBAoBLI,GApBK,MAoBgBvB,GApBhB,SAqBcmB,mBAAS,IArBvB,qBAqBL9H,GArBK,MAqBEd,GArBF,SAsB8B4I,oBAAS,GAtBvC,qBAsBLtI,GAtBK,MAsBMD,GAtBN,MA8BZ,SAAS8F,GAActF,EAAMqF,GACzB6D,IAAe,GACftG,EAAIwG,kBAAkB,CAAEpJ,KAAMA,EAAM8B,MAAOuD,IAAe3B,MAAK,WAC3D2F,QAECtC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAC9BkC,IAAe,GACfT,GAAkB,GAsFtB,SAASY,KACLzG,EAAI0G,cAAc5F,MAAK,SAACP,GACpBkF,EAAe,CACXrI,KAAMmD,EAAInD,KACV8B,MAAOqB,EAAIrB,MACXJ,OAAQyB,EAAIzB,OACZf,IAAKwC,EAAIxC,SAGZoG,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAMlC,SAASuC,GAAgBtE,GACjBA,EAAEuE,SAAWvE,EAAEwE,gBACflB,GAAiB,GACjBE,GAAkB,GAClBE,GAAc,GACdE,GAAoB,GACpBhC,GAAkB,GAClBoC,EAAgB,CAAEnJ,KAAM,GAAIE,KAAM,GAAI0C,QAAQ,KAqEtD,OAxDAwF,qBAAU,WACHjJ,aAAayK,QAAQ,UACtBtF,EAAQuF,WAAW1K,aAAayK,QAAQ,UACrChG,MAAK,SAACP,GACH,OAAmB,MAAfA,EAAIK,QACJvE,aAAaC,WAAW,SACxBD,aAAaC,WAAW,SACjBoE,QAAQC,OAAO,IAAIoD,MAAM,iCACV,MAAfxD,EAAIK,QACXvE,aAAaC,WAAW,SACxBD,aAAaC,WAAW,SACjBoE,QAAQC,OAAO,IAAIoD,MAAM,oBAEhCG,IAAe,QACf3H,GAASF,aAAayK,QAAQ,cAGrC3C,OAAM,SAACC,GACJC,QAAQC,IAAIF,QAKrB,IAGHkB,qBAAU,WACNtF,EAAI0G,cAAc5F,MAAK,SAACP,GACpB,IAAMyG,EAAc,CAChB5J,KAAMmD,EAAInD,KACV8B,MAAOqB,EAAIrB,MACXJ,OAAQyB,EAAIzB,OACZf,IAAKwC,EAAIxC,KAGb,OADA0H,EAAeuB,GACRA,KACRlG,MAAK,SAACmG,GAELjH,EAAIkH,cAAcpG,MAAK,SAACP,GACpBgG,GAAShG,EAAIlB,KAAI,SAACC,GACd,MAAO,CACHlC,KAAMkC,EAAKlC,KACXF,KAAMoC,EAAKpC,KACXwC,MAAOJ,EAAKI,MACZF,GAAIF,EAAKvB,IACT0B,QAASH,EAAK6H,MAAMpJ,IACpBqJ,KAAMH,EAAKlJ,YAIlBoG,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,SAE7BD,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAE/B,IAGC,kBAAC7G,EAAmB8J,SAApB,CAA6B7E,MAAO7E,GAChC,yBAAKb,UAAU,OACX,yBAAKA,UAAU,QAEX,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOwK,OAAK,EAACC,KAAK,KACd,kBAAC,EAAD,CACIlK,MAAOA,GACPd,SAAUA,GACVM,UAAWA,GACXD,qBAAsBA,KAC1B,kBAAC,EAAD,CACIoI,UAAWnG,EACXoG,WAAYA,GACZmB,aAAcA,EACdpH,sBA7LhC,SAAgCqD,GAC5BsD,GAAiB,IA6LW1G,uBA7MhC,SAAiCoD,GAC7BwD,GAAkB,IA6MU1G,mBAhLhC,SAA6BkD,GACzB0D,GAAc,IAgLczH,gBAxIhC,SAA0BpB,EAAME,GAC5BiJ,EAAgB,CAAEnJ,KAAMA,EAAME,KAAMA,EAAM0C,QAAQ,KAwItByG,SAAUA,GACVnH,MAAOA,GACPhB,kBAhJhC,SAA4BC,GACxB8H,EAAmB9H,GACnB4H,GAAoB,IA+IQtG,eAzIhC,SAAyB1B,EAAWI,GAEhC,IAAML,EAAUC,EAAUC,MAAK,SAAAC,GAAC,OAAIA,EAAEJ,MAAQJ,EAAYI,OAE1DiC,EAAIwH,qBAAqBnJ,GAASL,GAAS8C,MAAK,SAACxB,GAC7C,IAAMmI,EAAU,CACZrK,KAAMkC,EAAKlC,KACXF,KAAMoC,EAAKpC,KACXwC,MAAOJ,EAAKI,MACZF,GAAIF,EAAKvB,IACT0B,QAASH,EAAK6H,MAAMpJ,KAGlB2J,EAAWtI,GAAMC,KAAI,SAACsI,GAAD,OAAOA,EAAEnI,KAAOnB,EAASoJ,EAAUE,KAE9DpB,GAASmB,MAERvD,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,UA2HV,kBAAC,IAAD,CAAOmD,KAAK,UACR,kBAAC,EAAD,CAAQnK,KAAK,UAAUF,KAAK,cAC3B+H,GAAa,kBAAC,IAAD,CAAU9H,GAAG,MAAS,kBAAC,EAAD,CAChCC,KAAK,SACLF,KAAK,YACL2H,SAAS,UACTZ,kBAAmBA,EACnBD,uBAAwBA,GACxBE,eAAgBA,GAChB7G,MAAOA,GACPd,SAAUA,GACVqI,kBAAkB,uBAE1B,kBAAC,IAAD,CAAO2C,KAAK,aACR,kBAAC,EAAD,CAAQnK,KAAK,SAASF,KAAK,WAC1B+H,GAAa,kBAAC,IAAD,CAAU9H,GAAG,MAAS,kBAAC,EAAD,CAChCC,KAAK,UACLF,KAAK,SACL2H,SAAS,SACTZ,kBAAmBA,EACnBD,uBAAwBA,GACxBE,eAAgBA,GAChB7G,MAAOA,GACPd,SAAUA,GACVqI,kBAAkB,yBAKlC,6BAAS9H,UAAS,gBAxH1BsJ,EAAatG,QAAU4F,GAAoBE,GAAqBE,GAAiBE,GAAuBE,EAwHxD,wBAA0B,IAAM5I,QAASqJ,IAI7E,kBAAC,EAAD,CAAiBvD,eArOrC,SAAyBlG,GACrBoJ,IAAe,GACftG,EAAI4H,aAAa1K,GAAM4D,MAAK,WACxB2F,QAECtC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAC9BkC,IAAe,GACfX,GAAiB,IA8NgD7F,OAAQ4F,EAAkB3F,QAAS4G,GAAgB1D,SAAUA,KAG9G,kBAAC,EAAD,CAAkBP,aAAcA,GAC5B5C,OAAQ8F,EAAmB7F,QAAS4G,GAAgB1D,SAAUA,KAGlE,kBAAC,EAAD,CAAeP,aAAcA,GACzB5C,OAAQgG,EAAe/F,QAAS4G,GAAgBpD,WA9NxE,SAAqBnG,EAAMF,GACvBoJ,IAAe,GACftG,EAAI6H,QAAQ,CAAEzK,KAAMA,EAAMF,KAAMA,IAAQ4D,MAAK,SAACxB,GAC1C,IAAMmI,EAAU,CACZrK,KAAMkC,EAAKlC,KACXF,KAAMoC,EAAKpC,KACXwC,MAAOJ,EAAKI,MACZF,GAAIF,EAAKvB,IACT0B,QAASH,EAAK6H,MAAMpJ,KAExBwI,GAAS,GAAD,mBAAKnH,IAAL,CAAYqI,QACrB3G,MAAK,WACJwF,IAAe,GACfP,GAAc,MAEb5B,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OA+M8DnB,SAAUA,KAGtF,kBAAC,EAAD,CAAoBnD,OAAQkG,EAAqBjG,QAAS4G,GAAgBlD,aA7M9F,SAAuBpF,GACnBiI,IAAe,GAEftG,EAAI8H,WAAWzJ,GAAQyC,MAAK,WAExB,IAAMiH,EAAgB3I,GAAM4I,QAAO,SAAA1I,GAAI,OAAIA,EAAKE,KAAOnB,KAEvDkI,GAASwB,MAER5D,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAC9BkC,IAAe,GACfL,GAAoB,IAkMkGvC,gBAAiBA,EAAiBT,SAAUA,KAElJ,kBAAC,EAAD,CAAYnD,OAAQsG,EAAatG,OAAQC,QAAS4G,GAAgBvJ,KAAMgJ,EAAahJ,KAAMF,KAAMkJ,EAAalJ,OAE9G,kBAAC,EAAD,CAAa4C,OAAQoG,EAAmBnG,QAAS4G,GAAgBpB,oBAAqBA,MAK1F,kBAAC,EAAD,UC7SA0C,QACW,cAA7BzL,OAAOC,SAASyL,UAEe,UAA7B1L,OAAOC,SAASyL,UAEhB1L,OAAOC,SAASyL,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB7H,MAAK,SAAA8H,GACJA,EAAaC,gBAEd1E,OAAM,SAAA2E,GACLzE,QAAQyE,MAAMA,EAAM1D,c","file":"static/js/main.355aa23c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.8f7611ae.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit-pencil.d476a8b8.svg\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../images/logo.svg';\r\n\r\nfunction Header(props){\r\n\r\n    function removeJWT() {\r\n        localStorage.removeItem('token');\r\n        props.setEmail(\"\");\r\n        window.location.reload();\r\n        return\r\n    }\r\n\r\n    function handleHamburgerClick() {\r\n        props.toggleHamburgerState(!props.hamburger);\r\n    }\r\n\r\n    function loginOrRegister() { \r\n        if (props.link) {\r\n            return <Link className=\"header__link\" to={props.link}>{props.name}</Link> \r\n        } else if (props.email) {\r\n            return (\r\n                <>\r\n                    <p className={`header__email ${props.hamburger ? \"header__email_hamburger_active\" : \"\"}`}>{props.email}</p>\r\n                    <button onClick={removeJWT} className={`header__logout ${props.hamburger ? \"header__logout_hamburger_active\" : \"\"}`}>Log Out</button>\r\n                    <button onClick={handleHamburgerClick} className={`header__hamburger ${props.hamburger ? \"header__hamburger_active\" : \"\"}`}></button>\r\n                </>\r\n            )\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return(\r\n        <header className={`header width ${props.hamburger ? \"header_hamburger_active\" : \"\"}`}>\r\n            <img className=\"logo\" src={logo} alt=\"Around the US Logo\"/>\r\n            {loginOrRegister()}\r\n            \r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();","import React, {useContext} from 'react';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext.js';\r\n\r\nfunction Card(props) {\r\n\r\n    // define context\r\n    const currentUser = useContext(CurrentUserContext);\r\n    // check if card belongs to user\r\n    const isOwn = props.cardOwnerId === currentUser._id;\r\n\r\n    // Create a variable which you then set in `className` for the like button\r\n    const cardLikeButtonClassName = `element__like-button_active`;\r\n    // Check if the card was liked by the current user\r\n    const isLiked = props.cardLikes.some(i => i._id === currentUser._id);\r\n\r\n    function handleCardClick() { \r\n        props.handleCardClick(props.cardLink, props.cardName);\r\n       \r\n    }\r\n\r\n    function handleLikeClick() {\r\n        props.onCardLike(props.cardLikes, props.cardId);\r\n        \r\n    }\r\n\r\n    function handleDeleteClick() {\r\n        props.handleDeleteClick(props.cardId);\r\n    }\r\n\r\n    return(\r\n        \r\n        <li className=\"element\">\r\n            <button className={`element__delete ${isOwn ? \"element__delete_visible\": \"\"}`} onClick={handleDeleteClick}></button>\r\n            <div className=\"element__image\" onClick={handleCardClick} style={{ backgroundImage: `url(${props.cardLink})`}}>   \r\n            </div>\r\n            <div className=\"element__title-container\">\r\n                <h2 className=\"element__title\">{props.cardName}</h2>\r\n                <div className=\"element__like-container\">\r\n                    <button className={`element__like-button ${isLiked ? cardLikeButtonClassName : \"\"}`} onClick={handleLikeClick}></button>\r\n                    <p className=\"element__like-counter\">{props.cardLikes.length}</p>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Card;","import React, {useContext} from 'react';\r\nimport editPencil from '../images/edit-pencil.svg';\r\nimport Card from './Card.js';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext.js';\r\n\r\n\r\nfunction Main(props) {\r\n\r\n    const currentUser = useContext(CurrentUserContext)\r\n\r\n    return(\r\n        <main className=\"main\">\r\n            <section className=\"profile width\">\r\n                <div className=\"profile__avatar-container\">\r\n                    <img className=\"profile__avatar\" src={currentUser.avatar} alt=\"Your profile\"/>\r\n                    <div className=\"profile__overlay\">\r\n                        <img className=\"profile__overlay-image\" src={editPencil} alt=\"pencil\" onClick={props.handleEditAvatarClick}/>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div className=\"profile__name-container\">\r\n                    <h2 className=\"profile__name\">{currentUser.name}</h2>\r\n                    <button className=\"profile__edit-button\" onClick={props.handleEditProfileClick}></button>\r\n                    <p className=\"profile__subtitle\">{currentUser.about}</p>\r\n                </div>\r\n                    \r\n                <button className=\"form__save-button profile__add-button\" onClick={props.handleAddCardClick}></button>\r\n            </section>\r\n            {/* Card Grid section */}\r\n            <section className=\"elements width\">\r\n                <ul className=\"elements__grid-container\">\r\n                    {\r\n                        props.cards.map((card) => {\r\n                            return <Card key={card.id} cardName={card.name} cardId={card.id} cardOwnerId={card.ownerId} cardLink={card.link} cardLikes={card.likes}\r\n                            onCardLike={props.handleCardLike} handleDeleteClick={props.handleDeleteClick} handleCardClick={props.handleCardClick} />\r\n                        })\r\n                    }\r\n\r\n                </ul>\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\n\r\nfunction Footer(){\r\n    return(\r\n        <footer className=\"footer width\">\r\n            <p className=\"footer__copyright\">&copy; 2020 Danny Demosi</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction ImagePopup(props) {\r\n    return(\r\n        \r\n        <section className={`image-modal ${props.isOpen ? \"image-modal_visible\" : \"\"}`}>\r\n                <div className=\"image-modal__container \">\r\n                    <button className=\"modal__exit image-modal__exit\" onClick={props.onClose}></button>\r\n                    <img className=\"image-modal__image\" src={props.link} alt={props.name}/>\r\n                     <p className=\"image-modal__subtitle\">{props.name}</p>  \r\n                </div>\r\n            </section>\r\n    )\r\n}\r\n\r\nexport default ImagePopup;","import { apiEndpointsCards } from \"./utils.js\";\r\n\r\nclass Api {\r\n  constructor(endpoint) {\r\n    this._apiEndpoint = endpoint.url;\r\n    this._auth = endpoint.headers;\r\n  }\r\n\r\n  _checkResponse(res) {\r\n    return (res.ok ? res.json() : Promise.reject(`Error: ${res.status}`));\r\n  }\r\n  getUserInfo() {\r\n      return fetch(`${this._apiEndpoint}/users/me`, {\r\n      headers: this._auth\r\n      })\r\n      .then ((res) => {\r\n        return this._checkResponse(res)})\r\n  }\r\n\r\n  getCardList() {\r\n    return fetch(`${this._apiEndpoint}/cards`, {\r\n      headers: this._auth\r\n    })\r\n    .then ( res => this._checkResponse(res))\r\n  }\r\n\r\n  changeProfileInfo(data) {\r\n    return fetch(`${this._apiEndpoint}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: this._auth,\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        about: data.about\r\n      })\r\n    })\r\n    .then ( res => this._checkResponse(res))\r\n  }\r\n\r\n  addCard(data) {\r\n    return fetch(`${this._apiEndpoint}/cards`, {\r\n      method: \"POST\",\r\n      headers: this._auth,\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        link: data.link\r\n      })\r\n    })\r\n    .then ( res => this._checkResponse(res))\r\n  }\r\n\r\n  deleteCard(cardID) {\r\n    return fetch(`${this._apiEndpoint}/cards/${cardID}`, {\r\n      method: \"DELETE\",\r\n      headers: this._auth\r\n    })\r\n    .then ( res => this._checkResponse(res))\r\n  }\r\n\r\n  changeLikeCardStatus(cardID, likeStatus) {\r\n    if(likeStatus === true) {\r\n      return fetch(`${this._apiEndpoint}/cards/likes/${cardID}`, {\r\n        method: \"PUT\",\r\n        headers: this._auth\r\n      })\r\n      .then ( res => this._checkResponse(res))\r\n    } else {\r\n      return fetch(`${this._apiEndpoint}/cards/likes/${cardID}`, {\r\n        method: \"DELETE\",\r\n        headers: this._auth\r\n      })\r\n      .then ( res => this._checkResponse(res))\r\n    }\r\n  }\r\n\r\n  updateAvatar(url) {\r\n    return fetch(`${this._apiEndpoint}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: this._auth,\r\n      body: JSON.stringify({\r\n        avatar: url\r\n      })\r\n    })\r\n    .then ( res => this._checkResponse(res))\r\n  }\r\n}\r\n\r\n\r\n\r\nconst api = new Api(apiEndpointsCards);\r\n\r\nexport {api};","// //Global Selectors\r\n// const modal = document.querySelector(\".modal\");\r\n\r\n// // Selectors for image pop up\r\n// const imageModal = document.querySelector('.image-modal');\r\n\r\n// //Selectors for Add modal\r\n// const nameInput = document.querySelector('.form__input_image-title');\r\n// const linkInput = document.querySelector('.form__input_image-link');\r\n// const addCard = document.querySelector('.form_card');\r\n// const addButton = document.querySelector('.profile__add-button');\r\n\r\n// //Selectors for edit modal\r\n// const editProfile = document.querySelector('.form_edit-profile');\r\n// const editButton = document.querySelector('.profile__edit-button');\r\n// const editNameInput = document.querySelector('.form__input_name');\r\n// const editAboutInput = document.querySelector('.form__input_about');\r\n\r\n// //Selectors for Avatar modal\r\n// const avatarUpdateForm = document.querySelector('.form_update-avatar');\r\n// const editAvatar = document.querySelector('.profile__avatar-container');\r\n// const avatarElement = document.querySelector('.profile__avatar');\r\n\r\n// //Selectors for delete modal\r\n// const removeCardID = document.querySelector('.form__card-id');\r\n// //api data\r\nconst apiEndpointsCards = {\r\n    url: \"https://around.nomoreparties.co/v1/group-3\",\r\n    headers: { \r\n      authorization: \"98dd8ac9-99ea-4ab0-85f9-6d61f9934e14\",\r\n     \"Content-Type\": \"application/json\"\r\n     }\r\n}\r\n\r\nconst apiEndpointsRegister = {\r\n  url:\"https://register.nomoreparties.co\",\r\n  headers:{\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n}\r\n\r\nconst myId = \"747ab9509999074a8ccb0d68\"\r\n\r\n//default validation config\r\n\r\n// const defaultConfig = {\r\n//     inputSelector: \".form__input\",\r\n//     submitButtonSelector: \".form__save-button\",\r\n//     inactiveButtonClass: \"form__save-button_disabled\",\r\n//     inputErrorClass: \"form__input-error\",\r\n//     errorClass: \"form__error_visible\"\r\n// };\r\n\r\n// function toggleModal() {\r\n//     modal.classList.toggle('modal_display_visible');\r\n// }\r\n\r\n// function loadingIcon(isLoading, modal) {\r\n//     if (isLoading) {\r\n//      modal.querySelector('.form__save-button').textContent = \"Saving...\";\r\n//     } else {\r\n//      modal.querySelector('.form__save-button').textContent = \"Saved!\";\r\n//     }\r\n//    }\r\n\r\nexport { apiEndpointsCards, apiEndpointsRegister, myId};","import { apiEndpointsRegister } from './utils';\r\n\r\nclass Auth {\r\n    constructor(endpoint) {\r\n        this._apiEndpoint = endpoint.url;\r\n        this._headers = endpoint.headers;\r\n    }\r\n\r\n    _checkResponse (res) {\r\n        return (res.ok ? res.json() : Promise.reject(`Error: ${res.status}`));\r\n    }\r\n    getUserInfo () {\r\n        return fetch(`${this._apiEndpoint}/users/me`, {\r\n            headers: this._headers,\r\n        })\r\n            .then((res) => {\r\n                return this._checkResponse(res)\r\n            })\r\n    }\r\n\r\n    signUp(email, password) {\r\n        return fetch(`${this._apiEndpoint}/signup`, {\r\n            method: \"POST\",\r\n            headers: this._headers,\r\n            body: JSON.stringify({email, password})\r\n        })\r\n        .then((res) => {\r\n            return this._checkResponse(res);\r\n        })\r\n    }\r\n\r\n    signIn(email, password) {\r\n        return fetch(`${this._apiEndpoint}/signin`, {\r\n            method: \"POST\",\r\n            headers: this._headers,\r\n            body: JSON.stringify({email, password})\r\n        })\r\n            .then((res) => {\r\n                return this._checkResponse(res);\r\n            })\r\n    }\r\n    \r\n    checkToken(jwt) {\r\n        return fetch(`${this._apiEndpoint}/users/me`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${jwt}`\r\n            }\r\n        })\r\n    }\r\n    \r\n}\r\n\r\nconst authApi = new Auth(apiEndpointsRegister);\r\n\r\nexport { authApi };\r\n","import React from 'react';\r\n\r\nfunction PopupWithForm(props) {\r\n\r\n\r\n\r\n    return(\r\n            <form name={props.name} onSubmit={props.onSubmit} className={`form form_${props.name} ${props.isOpen ? \"form_visible\" : \"\"}`}>\r\n                    <button className={`modal__exit form__exit form__exit_${props.name}`} onClick={props.onClose} type=\"reset\"></button>\r\n                    <p className=\"form__title form-width\">{props.title}</p>\r\n                    {props.children}\r\n                </form>\r\n        )\r\n}\r\n\r\nexport default PopupWithForm;","import React, {useContext} from 'react';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditProfilePopup(props) {\r\n\r\n    //context declaration\r\n    const currentUser = useContext(CurrentUserContext);\r\n\r\n    //ref declarations\r\n    const nameRef = React.createRef();\r\n    const aboutRef = React.createRef();\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        const name = nameRef.current.value;\r\n        const description = aboutRef.current.value;\r\n        //submit to server\r\n        props.onUpdateUser(name, description)\r\n    }\r\n\r\n    return(\r\n        <PopupWithForm onSubmit={handleSubmit} name={\"edit-profile\"} title={\"Edit Profile\"} isOpen={props.isOpen} onClose={props.onClose} >\r\n        <div className=\"form__text-field-wrapper form-width\">\r\n                <input ref={nameRef} id=\"profile-name\" className=\"form__text-field form__input form__input_name\" placeholder=\"Name\" type=\"text\" defaultValue={currentUser.name} minLength=\"2\" maxLength=\"40\" required />\r\n                <span id=\"profile-name-error\" className=\"form__error\"></span>\r\n            </div>\r\n            <div className=\"form__text-field-wrapper form-width\">\r\n                <input ref={aboutRef} id=\"profile-about\" className=\"form__text-field form__input form__input_about\" placeholder=\"About me\" type=\"text\" defaultValue={currentUser.about} minLength=\"2\" maxLength=\"200\" required />\r\n                <span id=\"profile-about-error\" className=\"form__error\"></span>\r\n            </div>\r\n            <button type=\"submit\" className=\"form__save-button form__save-button_profile form-width\">{props.isSaving ? 'Saving...' : 'Save'}</button>\r\n        </PopupWithForm>\r\n        )\r\n}\r\n\r\nexport default EditProfilePopup;","import React, { useContext } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\r\n\r\nfunction EditAvatarPopup(props) {\r\n\r\n    //context declaration\r\n    const currentUser = useContext(CurrentUserContext);\r\n    //ref declarations\r\n    const linkRef = React.createRef();\r\n\r\n    function onSubmit(e) {\r\n        e.preventDefault();\r\n        const link = linkRef.current.value;\r\n        //submit to server\r\n        props.onUpdateAvatar(link)\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <PopupWithForm name={\"update-avatar\"} title={\"Edit Avatar\"} onSubmit={onSubmit} isOpen={props.isOpen} onClose={props.onClose} >\r\n            <div className=\"form__text-field-wrapper form-width\">\r\n                <input ref={linkRef} id=\"avatar-link\" className=\"form__text-field form__input form__input_avatar-link\" placeholder=\"Image URL\" type=\"url\"\r\n                defaultValue={currentUser.avatar} minLength=\"1\" />\r\n                <span id=\"avatar-link-error\" className=\"form__error\"></span>\r\n            </div>\r\n            <button type=\"submit\" className=\"form__save-button form__save-button_avatar-link form-width\">{props.isSaving ? 'Saving...' : 'Save'}</button>\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default EditAvatarPopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup(props) {\r\n\r\n    const titleRef = React.createRef();\r\n    const linkRef = React.createRef();\r\n\r\n    function onSubmit(e) {\r\n        e.preventDefault();\r\n        const name = titleRef.current.value;\r\n        const link = linkRef.current.value;\r\n        props.onAddPlace(name, link);\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm name={\"card\"} title={\"New Place\"} isOpen={props.isOpen} onClose={props.onClose} onSubmit={onSubmit}>\r\n            <div className=\"form__text-field-wrapper form-width\">\r\n                <input ref={titleRef} id=\"image-title\" className=\"form__text-field form__input form__input_image-title\" placeholder=\"Title\" type=\"text\" defaultValue=\"\" minLength=\"1\" maxLength=\"30\" />\r\n                <span id=\"image-title-error\" className=\"form__error\"></span>\r\n            </div>\r\n            <div className=\"form__text-field-wrapper form-width\">\r\n                <input ref={linkRef} id=\"image-link\" className=\"form__text-field form__input form__input_image-link\" placeholder=\"Image URL\" type=\"url\"\r\n                    defaultValue=\"\" minLength=\"1\" />\r\n                <span id=\"image-link-error\" className=\"form__error\"></span>\r\n            </div>\r\n            <button type=\"submit\" className=\"form__save-button form__save-button_card form-width\">{props.isSaving ? 'Saving...' : 'Create'}</button>\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default AddPlacePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction ConfirmDeletePopup(props) {\r\n\r\n    function onSubmit(e) {\r\n        e.preventDefault();\r\n        \r\n        //submit to server\r\n        props.onCardDelete(props.confirmDeleteId);\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <PopupWithForm name={\"confirm\"} title={\"Are you sure?\"} onSubmit={onSubmit} isOpen={props.isOpen} onClose={props.onClose} >\r\n            <button type=\"submit\" className=\"form__save-button form__save-button_avatar-link form-width\">{props.isSaving ? 'Saving...' : 'Yes'}</button>\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default ConfirmDeletePopup;","import React from 'react';\r\nimport { authApi } from '../utils/Auth';\r\n\r\nconst Register = (props) => {\r\n\r\n    const emailRef = React.createRef();\r\n    const passwordRef = React.createRef();\r\n\r\n    function handleRegisterSubmit(e) {\r\n        e.preventDefault();\r\n        authApi.signUp(emailRef.current.value, passwordRef.current.value)\r\n            .then((res) => {\r\n                if (res.status === 400) {\r\n                    return Promise.reject(new Error('The username or password is not in the proper format'))\r\n                } else {\r\n                    props.setRegistrationSuccess(true);\r\n                    props.toggleInfoTooltip(true);\r\n                    props.toggleLoggedIn(true);\r\n                    return res.data;\r\n                }\r\n            })\r\n            .then((data) => {\r\n                props.setEmail(data.email);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                props.setRegistrationSuccess(false);\r\n                props.toggleInfoTooltip(true);\r\n            })\r\n    }\r\n\r\n    return ( \r\n        <form>\r\n            <input ref={emailRef} className=\"auth__input\" type=\"text\" placeholder=\"Email\" />\r\n            <input ref={passwordRef} className=\"auth__input\" type=\"text\" placeholder=\"Password\"/>\r\n            <button onClick={handleRegisterSubmit} type=\"submit\" className=\"auth__submit\">{props.name}</button>\r\n        </form>\r\n     );\r\n}\r\n \r\nexport default Register;","import React from 'react';\r\nimport { authApi } from '../utils/Auth';\r\n\r\nconst Login = (props) => {\r\n\r\n    const emailRef = React.createRef();\r\n    const passwordRef = React.createRef();\r\n\r\n    function handleLoginSubmit (e) {\r\n        e.preventDefault();\r\n        const email = emailRef.current.value;\r\n        authApi.signIn(emailRef.current.value, passwordRef.current.value)\r\n            .then((res) => {\r\n                if (res.status === 400) {\r\n                    return Promise.reject(new Error('The username or password was not provided'))\r\n                } else if (res.status === 401) {\r\n                    return Promise.reject(new Error('Could not find a user with that email'))\r\n                } else {\r\n                    props.toggleLoggedIn(true);\r\n                    return res;\r\n                }\r\n            })\r\n            .then((data) => {\r\n                props.setEmail(email);\r\n                localStorage.setItem('email', email);\r\n                localStorage.setItem('token', data.token);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    return ( \r\n        <>\r\n            <input ref={emailRef} className=\"auth__input\" type=\"text\" placeholder=\"Email\" />\r\n            <input ref={passwordRef} className=\"auth__input\" type=\"text\" placeholder=\"Password\" />\r\n            <button onClick={handleLoginSubmit} className=\"auth__submit\" type=\"submit\">{props.name}</button>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default Login;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Register from './Register';\r\nimport Login from './Login';\r\n\r\n\r\nconst Auth = (props) => {\r\n\r\n  function loginOrRegister() {\r\n    if (props.name === 'Sign Up') {\r\n      return <Register \r\n        name={props.name} \r\n        setRegistrationSuccess={props.setRegistrationSuccess} \r\n        toggleInfoTooltip={props.toggleInfoTooltip} \r\n        toggleLoggedIn={props.toggleLoggedIn}\r\n        email={props.email}\r\n        setEmail={props.setEmail}  />\r\n    } else if (props.name === 'Log in'){\r\n      return <Login \r\n        name={props.name} \r\n        setRegistrationSuccess={props.setRegistrationSuccess} \r\n        toggleInfoTooltip={props.toggleInfoTooltip} \r\n        toggleLoggedIn={props.toggleLoggedIn}\r\n        email={props.email}\r\n        setEmail={props.setEmail}  />\r\n    } else {\r\n      console.log(\"Component doesn't exist\");\r\n      return null\r\n    }\r\n  }\r\n\r\n    return (\r\n      <div className=\"auth width\">\r\n        <h2 className=\"auth__title\">{props.name}</h2>\r\n        {loginOrRegister()}\r\n        <p className=\"auth__button-description\">{props.buttonDescription} <Link className=\"auth__link\" to={props.link}>{props.linkName} here!</Link></p>\r\n      </div>\r\n      );\r\n}\r\n \r\nexport default Auth;","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({ component: Component, ...props }) => {\r\n    return (\r\n        <Route>\r\n            {\r\n                () => props.isLoggedIn ? <Component {...props} /> : <Redirect to='/login' />\r\n            }\r\n        </Route>\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute;","import React, { useState, useEffect } from 'react';\r\n\r\nconst InfoTooltip = (props) => {\r\n    const [message, setMessage] = useState('');\r\n    \r\n    useEffect(() => {\r\n        function isRegisterSuccess () {\r\n        if (props.registrationSuccess === true) {\r\n            setMessage('Success! You have now been registered.')\r\n\r\n            return true\r\n        } else if (props.registrationSuccess === false) {\r\n            setMessage('Oops, something went wrong! Please try again.')\r\n            return false\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n        isRegisterSuccess();\r\n    }, [props.registrationSuccess])\r\n    \r\n    return (\r\n        <section className={`form info-tooltip ${props.isOpen ? \"info-tooltip_visible\" : \"\"}`}>\r\n            <div className=\"form-width \">\r\n                <button className=\"modal__exit image-modal__exit\" onClick={props.onClose}></button>\r\n                <div className={`info-tooltip__image ${props.registrationSuccess ? 'info-tooltip__image_success' : 'info-tooltip__image_fail'}`}/>\r\n                <p className=\"info-tooltip__message\">{message}</p>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default InfoTooltip;","import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport '../index.css';\r\n\r\nimport Header from './Header.js';\r\nimport Main from './Main.js';\r\nimport Footer from './Footer.js';\r\nimport ImagePopup from './ImagePopup.js';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\r\nimport { api } from '../utils/Api.js';\r\nimport { authApi } from '../utils/Auth';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport ConfirmDeletePopup from './ConfirmDeletePopup';\r\nimport Auth from './Auth';\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport InfoTooltip from './InfoTooltip';\r\n\r\nfunction App () {\r\n    const [currentUser, setCurrentInfo] = useState(\"\")\r\n    // Popup states\r\n    const [editAvatarIsOpen, toggleEditAvatar] = useState(false);\r\n    const [editProfileIsOpen, toggleEditProfile] = useState(false);\r\n    const [addCardIsOpen, toggleAddCard] = useState(false);\r\n    const [confirmDeleteIsOpen, toggleConfirmDelete] = useState(false);\r\n    const [infoTooltipIsOpen, toggleInfoTooltip] = useState(false);\r\n\r\n    const [confirmDeleteId, setConfirmDeleteId] = useState(\"\")\r\n    const [selectedCard, setSelectedCard] = useState({\r\n        link: \"\",\r\n        name: \"\",\r\n        isOpen: false\r\n    });\r\n    const [isSaving, toggleSaveText] = useState(false);\r\n    const [cards, setCards] = useState([]);\r\n\r\n    //Project 14 new States\r\n    const [isLoggedIn, toggleLoggedIn] = useState(false);\r\n    const [registrationSuccess, setRegistrationSuccess] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [hamburger, toggleHamburgerState] = useState(false);\r\n\r\n\r\n    //functions for Edit Profile\r\n\r\n    function handleEditProfileClick (e) {\r\n        toggleEditProfile(true);\r\n    }\r\n    function onUpdateUser (name, description) {\r\n        toggleSaveText(true);\r\n        api.changeProfileInfo({ name: name, about: description }).then(() => {\r\n            setCurrentUserInfo();\r\n        })\r\n            .catch(err => console.log(err));\r\n        toggleSaveText(false);\r\n        toggleEditProfile(false);\r\n    }\r\n\r\n\r\n    //functions for Edit Avatar\r\n    function handleEditAvatarClick (e) {\r\n        toggleEditAvatar(true);\r\n    }\r\n    function onUpdateAvatar (link) {\r\n        toggleSaveText(true)\r\n        api.updateAvatar(link).then(() => {\r\n            setCurrentUserInfo();\r\n        })\r\n            .catch(err => console.log(err));\r\n        toggleSaveText(false)\r\n        toggleEditAvatar(false);\r\n    }\r\n\r\n\r\n    //functions for Add place\r\n    function handleAddCardClick (e) {\r\n        toggleAddCard(true);\r\n    }\r\n    function onAddPlace (name, link) {\r\n        toggleSaveText(true);\r\n        api.addCard({ name: name, link: link }).then((card) => {\r\n            const newCard = {\r\n                name: card.name,\r\n                link: card.link,\r\n                likes: card.likes,\r\n                id: card._id,\r\n                ownerId: card.owner._id\r\n            }\r\n            setCards([...cards, newCard]);\r\n        }).then(() => {\r\n            toggleSaveText(false);\r\n            toggleAddCard(false);\r\n        })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n\r\n    //functions for Cards\r\n    function onCardDelete (cardId) {\r\n        toggleSaveText(true);\r\n        //delete card from server\r\n        api.deleteCard(cardId).then(() => {\r\n            //filter cards on page and remove the card with matching id from the array\r\n            const filteredCards = cards.filter(card => card.id !== cardId)\r\n            //set new card array state\r\n            setCards(filteredCards);\r\n        })\r\n            .catch(err => console.log(err));\r\n        toggleSaveText(false);\r\n        toggleConfirmDelete(false);\r\n    }\r\n    function handleDeleteClick (cardId) {\r\n        setConfirmDeleteId(cardId);\r\n        toggleConfirmDelete(true);\r\n\r\n    }\r\n    function handleCardClick (link, name) {\r\n        setSelectedCard({ link: link, name: name, isOpen: true });\r\n    }\r\n    function handleCardLike (cardLikes, cardId) {\r\n        // Check one more time if this card was already liked\r\n        const isLiked = cardLikes.some(i => i._id === currentUser._id);\r\n        // Send a request to the API and getting the updated card data\r\n        api.changeLikeCardStatus(cardId, !isLiked).then((card) => {\r\n            const newCard = {\r\n                name: card.name,\r\n                link: card.link,\r\n                likes: card.likes,\r\n                id: card._id,\r\n                ownerId: card.owner._id\r\n            }\r\n            // Create a new array based on the existing one and putting a new card into it\r\n            const newCards = cards.map((c) => c.id === cardId ? newCard : c);\r\n            // Update the state\r\n            setCards(newCards);\r\n        })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    //function to assign context data\r\n\r\n    function setCurrentUserInfo () {\r\n        api.getUserInfo().then((res) => {\r\n            setCurrentInfo({\r\n                name: res.name,\r\n                about: res.about,\r\n                avatar: res.avatar,\r\n                _id: res._id\r\n            });\r\n        })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n\r\n    //global functions\r\n\r\n    function closeAllPopups (e) {\r\n        if (e.target === e.currentTarget) {\r\n            toggleEditAvatar(false);\r\n            toggleEditProfile(false);\r\n            toggleAddCard(false);\r\n            toggleConfirmDelete(false);\r\n            toggleInfoTooltip(false);\r\n            setSelectedCard({ link: \"\", name: \"\", isOpen: false })\r\n        }\r\n    }\r\n\r\n    function isOpen () {\r\n        if (selectedCard.isOpen || editAvatarIsOpen || editProfileIsOpen || addCardIsOpen || confirmDeleteIsOpen || infoTooltipIsOpen) {\r\n            return true;\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    // API request to verify JWT\r\n    useEffect(() => {\r\n        if(localStorage.getItem('token')) {\r\n          authApi.checkToken(localStorage.getItem('token'))\r\n            .then((res) => {\r\n                if (res.status === 400) {\r\n                    localStorage.removeItem('token');\r\n                    localStorage.removeItem('email');\r\n                    return Promise.reject(new Error('No token or improper format'));\r\n                } else if (res.status === 401) {\r\n                    localStorage.removeItem('token');\r\n                    localStorage.removeItem('email');\r\n                    return Promise.reject(new Error('Invalid token'));\r\n                } else {\r\n                    toggleLoggedIn(true);\r\n                    setEmail(localStorage.getItem('email'));\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n        } else {\r\n            return\r\n        }\r\n    }, []);\r\n\r\n    //API request for User Info\r\n    useEffect(() => {\r\n        api.getUserInfo().then((res) => {\r\n            const currentInfo = {\r\n                name: res.name,\r\n                about: res.about,\r\n                avatar: res.avatar,\r\n                _id: res._id\r\n            }\r\n            setCurrentInfo(currentInfo);\r\n            return currentInfo\r\n        }).then((info) => {\r\n\r\n            api.getCardList().then((res) => {\r\n                setCards(res.map((card) => {\r\n                    return {\r\n                        name: card.name,\r\n                        link: card.link,\r\n                        likes: card.likes,\r\n                        id: card._id,\r\n                        ownerId: card.owner._id,\r\n                        myId: info._id\r\n                    }\r\n                }))\r\n            })\r\n                .catch(err => console.log(err))\r\n        })\r\n            .catch(err => console.log(err))\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <CurrentUserContext.Provider value={currentUser}>\r\n            <div className=\"App\">\r\n                <div className=\"page\">\r\n                    \r\n                    <Router>\r\n                        <Switch>\r\n                            <Route exact path=\"/\">\r\n                                <Header \r\n                                    email={email} \r\n                                    setEmail={setEmail} \r\n                                    hamburger={hamburger}\r\n                                    toggleHamburgerState={toggleHamburgerState} />\r\n                                <ProtectedRoute\r\n                                    component={Main}\r\n                                    isLoggedIn={isLoggedIn}\r\n                                    selectedCard={selectedCard}\r\n                                    handleEditAvatarClick={handleEditAvatarClick}\r\n                                    handleEditProfileClick={handleEditProfileClick}\r\n                                    handleAddCardClick={handleAddCardClick}\r\n                                    handleCardClick={handleCardClick}\r\n                                    setCards={setCards}\r\n                                    cards={cards}\r\n                                    handleDeleteClick={handleDeleteClick}\r\n                                    handleCardLike={handleCardLike}\r\n                                    />\r\n                            </Route>\r\n                            <Route path=\"/login\">\r\n                                <Header name=\"Sign Up\" link=\"/register\"/>\r\n                                {isLoggedIn ? <Redirect to=\"/\" /> : <Auth \r\n                                    name=\"Log in\" \r\n                                    link=\"/register\" \r\n                                    linkName=\"Sign up\" \r\n                                    toggleInfoTooltip={toggleInfoTooltip} \r\n                                    setRegistrationSuccess={setRegistrationSuccess} \r\n                                    toggleLoggedIn={toggleLoggedIn}\r\n                                    email={email}\r\n                                    setEmail={setEmail} \r\n                                    buttonDescription=\"Not a member yet?\" />}\r\n                            </Route>\r\n                            <Route path=\"/register\">\r\n                                <Header name=\"Log in\" link=\"/login\" />\r\n                                {isLoggedIn ? <Redirect to=\"/\" /> : <Auth \r\n                                    name=\"Sign Up\" \r\n                                    link=\"/login\" \r\n                                    linkName=\"Log in\" \r\n                                    toggleInfoTooltip={toggleInfoTooltip} \r\n                                    setRegistrationSuccess={setRegistrationSuccess} \r\n                                    toggleLoggedIn={toggleLoggedIn}\r\n                                    email={email}\r\n                                    setEmail={setEmail} \r\n                                    buttonDescription=\"Already a member?\" />}\r\n                            </Route>\r\n                        </Switch>\r\n                    </Router>\r\n                    {/* Popup forms */}\r\n                    <section className={`modal ${isOpen() ? \"modal_display_visible\" : \"\"}`} onClick={closeAllPopups}>\r\n\r\n                        {/* Update Avatar form */}\r\n\r\n                        <EditAvatarPopup onUpdateAvatar={onUpdateAvatar} isOpen={editAvatarIsOpen} onClose={closeAllPopups} isSaving={isSaving} />\r\n\r\n                        {/* Edit profile form */}\r\n                        <EditProfilePopup onUpdateUser={onUpdateUser}\r\n                            isOpen={editProfileIsOpen} onClose={closeAllPopups} isSaving={isSaving} />\r\n\r\n                        {/* Add Card form */}\r\n                        <AddPlacePopup onUpdateUser={onUpdateUser}\r\n                            isOpen={addCardIsOpen} onClose={closeAllPopups} onAddPlace={onAddPlace} isSaving={isSaving} />\r\n\r\n                        {/* Confirm delete popup */}\r\n                        <ConfirmDeletePopup isOpen={confirmDeleteIsOpen} onClose={closeAllPopups} onCardDelete={onCardDelete} confirmDeleteId={confirmDeleteId} isSaving={isSaving} />\r\n                        {/* Image Popup form */}\r\n                        <ImagePopup isOpen={selectedCard.isOpen} onClose={closeAllPopups} name={selectedCard.name} link={selectedCard.link} />\r\n                        {/* Confirm registration popup */}\r\n                        <InfoTooltip isOpen={infoTooltipIsOpen} onClose={closeAllPopups} registrationSuccess={registrationSuccess} ></InfoTooltip>\r\n                    </section>\r\n\r\n\r\n\r\n                    <Footer />\r\n\r\n                </div>\r\n            </div>\r\n        </CurrentUserContext.Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App.js';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}